# services:
#     app:
#         image: joaokb/projeto1-app # Utilize a imagem publicada no Docker Hub
#         ports:
#             - "8000:8000"
#             # Portas abertas são necessárias para acessar o serviço fora do container.
#         environment:
#             - SECRET_KEY=${SECRET_KEY:-2e6e8cc741f246604c750dcc672fed67c877b2fe9f77eafaa41245ce91b5a0d3}
#             - sqlite_file_name=${sqlite_file_name:-database.db}
#             - salt=${salt:-18274393}
#             - MYSQL_USER=${MYSQL_USER:-user}
#             - MYSQL_PASSWORD=${MYSQL_PASSWORD:-cloud}
#             - DB_HOST=mysql
#             - DB_PORT=3306
#             - MYSQL_DATABASE=${MYSQL_DB:-db}
#         depends_on:
#             mysql:
#                 condition: service_healthy

#     mysql:
#         image: mysql:8.0
#         restart: always
#         environment:
#             MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
#             MYSQL_USER: ${MYSQL_USER:-user}
#             MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cloud}
#             MYSQL_DATABASE: ${MYSQL_DB:-db}
#         healthcheck:
#             test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#             interval: 10s
#             timeout: 5s
#             retries: 10
services:
    app:
        build: ./app/auth_service
        ports:
            - "8000:8000"
            # ter portas abertas é ruim? como vou acessar se as portas?
        environment:
            - SECRET_KEY=${SECRET_KEY:-2e6e8cc741f246604c750dcc672fed67c877b2fe9f77eafaa41245ce91b5a0d3}
            - sqlite_file_name=${sqlite_file_name:-database.db}
            - salt=${salt:-18274393}
            - MYSQL_USER=${MYSQL_USER:-user}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD:-cloud}
            - DB_HOST=mysql
            - DB_PORT=3306
            - MYSQL_DATABASE=${MYSQL_DB:-db}
        volumes:
            - ./app/auth_service:/usr/local/app
            # isso permite eu fazer alterações para desenvolvimento parece ser bem top
        depends_on:
            mysql:
                condition: service_healthy
                restart: true
        networks:
            - app-network

    query_service:
        build: ./app/consult-service
        ports:
            - "8002:8000" # Query service na porta 8002 do host
        environment:
            - SECRET_KEY=${SECRET_KEY:-2e6e8cc741f246604c750dcc672fed67c877b2fe9f77eafaa41245ce91b5a0d3}
            - sqlite_file_name=${sqlite_file_name:-database.db}
            - salt=${salt:-18274393}
            - MYSQL_USER=${MYSQL_USER:-user}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD:-cloud}
            - DB_HOST=mysql
            - DB_PORT=3306
            - MYSQL_DATABASE=${MYSQL_DB:-db}
        volumes:
            - ./app/consult-service:/usr/local/app # Para hot-reloading no desenvolvimento
        depends_on:
            mysql:
                condition: service_healthy
                restart: true
        restart: unless-stopped
        networks:
            - app-network
        # Não depende diretamente do mysql, mas espera que o auth_service esteja funcionando
        # para que os tokens sejam gerados.
    mysql:
        image: mysql:8.0
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
            MYSQL_USER: ${MYSQL_USER:-user}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cloud}
            MYSQL_DATABASE: ${MYSQL_DB:-db}
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            timeout: 5s
            retries: 10
        networks:
            - app-network

networks:
    app-network: # Define uma rede customizada para os serviços comunicarem
        driver: bridge
